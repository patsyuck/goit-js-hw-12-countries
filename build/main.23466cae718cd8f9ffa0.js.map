{"version":3,"sources":["webpack:///./main.js","webpack:///./fetchCountries.js","webpack:///../templates/list.hbs"],"names":["defaultModules","set","PNotifyMobile","inputCountry","document","querySelector","resultArea","branch11plus","alert","text","innerHTML","branch2plus","data","len","alertBezimenniy","countries","items","map","item","name","listMenu","branch1","lang","languages","capital","population","flag","branch0","addEventListener","debounce","searchQuery","value","fetch","then","response","ok","json","Error","length","branches","catch","err","Handlebars","module","exports","template","container","depth0","helpers","partials","escapeExpression","lambda","stack1","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","nullContext","program","noop"],"mappings":"yQAKAA,iBAAeC,IAAIC,EAAe,IAClC,IAAMC,EAAeC,SAASC,cAAc,iBACtCC,EAAaF,SAASC,cAAc,WA6B1C,SAASE,IA1BLC,gBAAM,CACFC,KAAM,2FA2BVH,EAAWI,UAAY,GAG3B,SAASC,EAAYC,EAAMC,IAzB3B,SAAyBA,GACrBL,gBAAM,CACFC,KAAM,YAAYI,EAAd,8DAwBRC,CAAgBD,GAChB,IAAME,EAAY,CAACC,MAAOJ,EAAKK,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SAChDb,EAAWI,UAAYU,IAASL,GAGpC,SAASM,EAAQT,GAvBbJ,gBAAM,CACFC,KAAM,iCAwBV,IAAMa,EAAO,CAACN,MAAOJ,EAAK,GAAGW,UAAUN,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SACxDb,EAAWI,UACX,OAAOE,EAAK,GAAGO,KAAf,iHAG4CP,EAAK,GAAGY,QAHpD,2DAI+CZ,EAAK,GAAGa,WAJvD,yDAMUL,IAASE,GANnB,gDASyBV,EAAK,GAAGc,KATjC,mBAaJ,SAASC,IAlCLnB,gBAAM,CACFC,KAAM,4GAmCVH,EAAWI,UAAY,GAyB3BP,EAAayB,iBAAiB,QAASC,KAXvC,WChFe,IAAwBC,KDiFpB3B,EAAa4B,MChFrBC,MAAM,yCAA2CF,IDiFvDG,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAASE,OACpB,MAAM,IAAIC,MAAM,2BAEfJ,MAAK,SAAArB,IAlBd,SAAkBA,GACd,IAAMC,EAAMD,EAAK0B,OACbzB,EAAM,GACNN,IACOM,EAAM,EACbF,EAAYC,EAAMC,GAElBQ,EAAQT,GAWO2B,CAAS3B,MAC3B4B,OAAM,SAAAC,GAAQd,SAGkD,O,qBE3FrE,IAAIe,EAAa,EAAQ,QAEzBC,EAAOC,SAAWF,EAAoB,SAAKA,GAAYG,SAAS,CAAC,EAAI,SAASC,EAAUC,EAAOC,EAAQC,EAASrC,GAC5G,MAAO,6BACLkC,EAAUI,iBAAiBJ,EAAUK,OAAOJ,EAAQA,IACpD,WACJ,SAAW,CAAC,EAAE,YAAY,KAAO,SAASD,EAAUC,EAAOC,EAAQC,EAASrC,GAC1E,IAAIwC,EAAQC,EAAiBP,EAAUO,gBAAkB,SAASC,EAAQC,GACtE,GAAIC,OAAOC,UAAUC,eAAeC,KAAKL,EAAQC,GAC/C,OAAOD,EAAOC,IAKtB,MAAO,uBACyU,OAA1UH,EAASC,EAAeL,EAAQ,QAAQW,KAAe,MAAVZ,EAAiBA,EAAUD,EAAUc,aAAe,GAAe,MAAVb,EAAiBM,EAAeN,EAAO,SAAWA,EAAQ,CAAC,KAAO,OAAO,KAAO,GAAG,GAAKD,EAAUe,QAAQ,EAAGjD,EAAM,GAAG,QAAUkC,EAAUgB,KAAK,KAAOlD,EAAK,IAAM,CAAC,MAAQ,CAAC,KAAO,EAAE,OAAS,GAAG,IAAM,CAAC,KAAO,EAAE,OAAS,QAAkBwC,EAAS,IAC5V,WACJ,SAAU,M","file":"main.23466cae718cd8f9ffa0.js","sourcesContent":["import debounce from 'lodash.debounce'\nimport fetchCountries from './fetchCountries.js'\nimport listMenu from '../templates/list.hbs'\nimport { alert, defaultModules } from '../node_modules/@pnotify/core/dist/PNotify.js'\nimport * as PNotifyMobile from '../node_modules/@pnotify/mobile/dist/PNotifyMobile.js'\ndefaultModules.set(PNotifyMobile, {})\nconst inputCountry = document.querySelector('input#country')\nconst resultArea = document.querySelector(\".result\")\n\nfunction alertNoName() {\n    alert({\n        text: `Знайдено дуже багато країн. \n        Будь ласка, зробіть Ваш запит більш специфічним.`\n    })\n}\n\nfunction alertBezimenniy(len) {\n    alert({\n        text: `Знайдено ${len} країн(и). \n        Будь ласка, конкретизуйте Ваш запит.`\n    })\n}\n\nfunction alertBezNazvaniya() {\n    alert({\n        text: `Ваш запит успішно виконаний.`\n    })\n}\n\nfunction alertDaYaPrikaluyus() {\n    alert({\n        text: `Запит порожній або некоректний. \n        Будь ласка, введіть правильну назву країни англійською мовою.`\n    })\n}\n\nfunction branch11plus() {\n    alertNoName()\n    resultArea.innerHTML = ''\n}\n\nfunction branch2plus(data, len) {\n    alertBezimenniy(len)\n    const countries = {items: data.map(item => item.name)}\n    resultArea.innerHTML = listMenu(countries)\n}\n\nfunction branch1(data) {\n    alertBezNazvaniya()\n    const lang = {items: data[0].languages.map(item => item.name)}\n    resultArea.innerHTML = \n    `<h1>${data[0].name}</h1>\n    <div class=\"container\">\n    <ul class=\"list-main\">\n        <li class=\"item-main\"><b>Capital:</b> ${data[0].capital}</li>\n        <li class=\"item-main\"><b>Population:</b> ${data[0].population}</li>\n        <li class=\"item-main\"><b>Languages:</b>`\n            + listMenu(lang) +\n        `</li>\n    </ul>\n    <img class=\"flag\" src=\"${data[0].flag}\" />\n    </div>`\n}\n\nfunction branch0() {\n    alertDaYaPrikaluyus()\n    resultArea.innerHTML = ''\n}\n\nfunction branches(data) {\n    const len = data.length\n    if (len > 10) {\n        branch11plus()\n    } else if (len > 1) {\n        branch2plus(data, len)\n    } else {\n        branch1(data)\n    }\n}\n\nfunction handleCountriesData() {\n    fetchCountries(inputCountry.value)\n    .then(response => {\n        if (response.ok)\n            return response.json()\n        throw new Error(\"Error fetching data.\")\n    })\n        .then(data => {branches(data)})\n    .catch(err => {branch0()})\n}\n\ninputCountry.addEventListener('input', debounce(handleCountriesData, 500))","export default function fetchCountries(searchQuery) {\n    return fetch(\"https://restcountries.eu/rest/v2/name/\" + searchQuery)\n}","var Handlebars = require(\"../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"1\":function(container,depth0,helpers,partials,data) {\n    return \"    <li class=\\\"list-item\\\">\"\n    + container.escapeExpression(container.lambda(depth0, depth0))\n    + \"</li>\\n\";\n},\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<ul class=\\\"list\\\">\\n\"\n    + ((stack1 = lookupProperty(helpers,\"each\").call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? lookupProperty(depth0,\"items\") : depth0),{\"name\":\"each\",\"hash\":{},\"fn\":container.program(1, data, 0),\"inverse\":container.noop,\"data\":data,\"loc\":{\"start\":{\"line\":2,\"column\":4},\"end\":{\"line\":4,\"column\":13}}})) != null ? stack1 : \"\")\n    + \"</ul>\\n\";\n},\"useData\":true});"],"sourceRoot":""}